mem 0: 1102 <--- current <--- relBase
mem 1: 34463338  
mem 2: 34463338  
mem 3: 63  
mem 4: 1007  
mem 5: 63  
mem 6: 34463338  
mem 7: 63  
mem 8: 1005  
mem 9: 63  
mem 10: 53  
mem 11: 1101  
mem 12: 3  
mem 13: 0  
mem 14: 1000  
mem 15: 109  
mem 16: 988  
mem 17: 209  
mem 18: 12  
mem 19: 9  
mem 20: 1000  
mem 21: 209  
mem 22: 6  
mem 23: 209  
mem 24: 3  
mem 25: 203  
mem 26: 0  
mem 27: 1008  
mem 28: 1000  
mem 29: 1  
mem 30: 63  
mem 31: 1005  
mem 32: 63  
mem 33: 65  
mem 34: 1008  
mem 35: 1000  
mem 36: 2  
mem 37: 63  
mem 38: 1005  
mem 39: 63  
mem 40: 904  
mem 41: 1008  
mem 42: 1000  
mem 43: 0  
mem 44: 63  
mem 45: 1005  
mem 46: 63  
mem 47: 58  
mem 48: 4  
mem 49: 25  
mem 50: 104  
mem 51: 0  
mem 52: 99  
mem 53: 4  
mem 54: 0  
mem 55: 104  
mem 56: 0  
mem 57: 99  
mem 58: 4  
mem 59: 17  
mem 60: 104  
mem 61: 0  
mem 62: 99  
mem 63: 0  
mem 64: 0  
mem 65: 1102  
mem 66: 1  
mem 67: 550  
mem 68: 1027  
mem 69: 1101  
mem 70: 0  
mem 71: 0  
mem 72: 1020  
mem 73: 1101  
mem 74: 30  
mem 75: 0  
mem 76: 1004  
mem 77: 1101  
mem 78: 0  
mem 79: 22  
mem 80: 1014  
mem 81: 1102  
mem 82: 1  
mem 83: 36  
mem 84: 1009  
mem 85: 1101  
mem 86: 37  
mem 87: 0  
mem 88: 1007  
mem 89: 1102  
mem 90: 25  
mem 91: 1  
mem 92: 1010  
mem 93: 1102  
mem 94: 1  
mem 95: 33  
mem 96: 1012  
mem 97: 1102  
mem 98: 282  
mem 99: 1  
mem 100: 1029  
mem 101: 1102  
mem 102: 1  
mem 103: 488  
mem 104: 1025  
mem 105: 1101  
mem 106: 0  
mem 107: 31  
mem 108: 1019  
mem 109: 1101  
mem 110: 0  
mem 111: 21  
mem 112: 1008  
mem 113: 1101  
mem 114: 0  
mem 115: 35  
mem 116: 1015  
mem 117: 1101  
mem 118: 664  
mem 119: 0  
mem 120: 1023  
mem 121: 1102  
mem 122: 26  
mem 123: 1  
mem 124: 1001  
mem 125: 1101  
mem 126: 28  
mem 127: 0  
mem 128: 1016  
mem 129: 1102  
mem 130: 29  
mem 131: 1  
mem 132: 1005  
mem 133: 1102  
mem 134: 1  
mem 135: 24  
mem 136: 1002  
mem 137: 1101  
mem 138: 20  
mem 139: 0  
mem 140: 1018  
mem 141: 1101  
mem 142: 27  
mem 143: 0  
mem 144: 1013  
mem 145: 1101  
mem 146: 38  
mem 147: 0  
mem 148: 1017  
mem 149: 1102  
mem 150: 1  
mem 151: 1  
mem 152: 1021  
mem 153: 1102  
mem 154: 1  
mem 155: 557  
mem 156: 1026  
mem 157: 1102  
mem 158: 1  
mem 159: 39  
mem 160: 1000  
mem 161: 1101  
mem 162: 23  
mem 163: 0  
mem 164: 1006  
mem 165: 1101  
mem 166: 493  
mem 167: 0  
mem 168: 1024  
mem 169: 1102  
mem 170: 1  
mem 171: 291  
mem 172: 1028  
mem 173: 1101  
mem 174: 671  
mem 175: 0  
mem 176: 1022  
mem 177: 1101  
mem 178: 0  
mem 179: 34  
mem 180: 1003  
mem 181: 1101  
mem 182: 0  
mem 183: 32  
mem 184: 1011  
mem 185: 109  
mem 186: 10  
mem 187: 21108  
mem 188: 40  
mem 189: 40  
mem 190: 8  
mem 191: 1005  
mem 192: 1018  
mem 193: 199  
mem 194: 4  
mem 195: 187  
mem 196: 1105  
mem 197: 1  
mem 198: 203  
mem 199: 1001  
mem 200: 64  
mem 201: 1  
mem 202: 64  
mem 203: 1002  
mem 204: 64  
mem 205: 2  
mem 206: 64  
mem 207: 109  
mem 208: -14  
mem 209: 2108  
mem 210: 30  
mem 211: 8  
mem 212: 63  
mem 213: 1005  
mem 214: 63  
mem 215: 225  
mem 216: 4  
mem 217: 209  
mem 218: 1001  
mem 219: 64  
mem 220: 1  
mem 221: 64  
mem 222: 1105  
mem 223: 1  
mem 224: 225  
mem 225: 1002  
mem 226: 64  
mem 227: 2  
mem 228: 64  
mem 229: 109  
mem 230: 3  
mem 231: 2102  
mem 232: 1  
mem 233: 4  
mem 234: 63  
mem 235: 1008  
mem 236: 63  
mem 237: 34  
mem 238: 63  
mem 239: 1005  
mem 240: 63  
mem 241: 251  
mem 242: 4  
mem 243: 231  
mem 244: 1001  
mem 245: 64  
mem 246: 1  
mem 247: 64  
mem 248: 1106  
mem 249: 0  
mem 250: 251  
mem 251: 1002  
mem 252: 64  
mem 253: 2  
mem 254: 64  
mem 255: 109  
mem 256: 12  
mem 257: 2107  
mem 258: 22  
mem 259: -5  
mem 260: 63  
mem 261: 1005  
mem 262: 63  
mem 263: 269  
mem 264: 4  
mem 265: 257  
mem 266: 1105  
mem 267: 1  
mem 268: 273  
mem 269: 1001  
mem 270: 64  
mem 271: 1  
mem 272: 64  
mem 273: 1002  
mem 274: 64  
mem 275: 2  
mem 276: 64  
mem 277: 109  
mem 278: 20  
mem 279: 2106  
mem 280: 0  
mem 281: -3  
mem 282: 4  
mem 283: 279  
mem 284: 1001  
mem 285: 64  
mem 286: 1  
mem 287: 64  
mem 288: 1106  
mem 289: 0  
mem 290: 291  
mem 291: 1002  
mem 292: 64  
mem 293: 2  
mem 294: 64  
mem 295: 109  
mem 296: -16  
mem 297: 21108  
mem 298: 41  
mem 299: 40  
mem 300: -3  
mem 301: 1005  
mem 302: 1012  
mem 303: 311  
mem 304: 1001  
mem 305: 64  
mem 306: 1  
mem 307: 64  
mem 308: 1105  
mem 309: 1  
mem 310: 313  
mem 311: 4  
mem 312: 297  
mem 313: 1002  
mem 314: 64  
mem 315: 2  
mem 316: 64  
mem 317: 109  
mem 318: -13  
mem 319: 2101  
mem 320: 0  
mem 321: 2  
mem 322: 63  
mem 323: 1008  
mem 324: 63  
mem 325: 30  
mem 326: 63  
mem 327: 1005  
mem 328: 63  
mem 329: 335  
mem 330: 4  
mem 331: 319  
mem 332: 1105  
mem 333: 1  
mem 334: 339  
mem 335: 1001  
mem 336: 64  
mem 337: 1  
mem 338: 64  
mem 339: 1002  
mem 340: 64  
mem 341: 2  
mem 342: 64  
mem 343: 109  
mem 344: -3  
mem 345: 2102  
mem 346: 1  
mem 347: 4  
mem 348: 63  
mem 349: 1008  
mem 350: 63  
mem 351: 35  
mem 352: 63  
mem 353: 1005  
mem 354: 63  
mem 355: 359  
mem 356: 1106  
mem 357: 0  
mem 358: 365  
mem 359: 4  
mem 360: 345  
mem 361: 1001  
mem 362: 64  
mem 363: 1  
mem 364: 64  
mem 365: 1002  
mem 366: 64  
mem 367: 2  
mem 368: 64  
mem 369: 109  
mem 370: 15  
mem 371: 1205  
mem 372: 6  
mem 373: 377  
mem 374: 1105  
mem 375: 1  
mem 376: 383  
mem 377: 4  
mem 378: 371  
mem 379: 1001  
mem 380: 64  
mem 381: 1  
mem 382: 64  
mem 383: 1002  
mem 384: 64  
mem 385: 2  
mem 386: 64  
mem 387: 109  
mem 388: 5  
mem 389: 21102  
mem 390: 42  
mem 391: 1  
mem 392: -2  
mem 393: 1008  
mem 394: 1017  
mem 395: 39  
mem 396: 63  
mem 397: 1005  
mem 398: 63  
mem 399: 403  
mem 400: 1106  
mem 401: 0  
mem 402: 409  
mem 403: 4  
mem 404: 389  
mem 405: 1001  
mem 406: 64  
mem 407: 1  
mem 408: 64  
mem 409: 1002  
mem 410: 64  
mem 411: 2  
mem 412: 64  
mem 413: 109  
mem 414: -17  
mem 415: 21107  
mem 416: 43  
mem 417: 44  
mem 418: 10  
mem 419: 1005  
mem 420: 1012  
mem 421: 431  
mem 422: 4  
mem 423: 415  
mem 424: 1001  
mem 425: 64  
mem 426: 1  
mem 427: 64  
mem 428: 1106  
mem 429: 0  
mem 430: 431  
mem 431: 1002  
mem 432: 64  
mem 433: 2  
mem 434: 64  
mem 435: 109  
mem 436: 14  
mem 437: 21107  
mem 438: 44  
mem 439: 43  
mem 440: -4  
mem 441: 1005  
mem 442: 1012  
mem 443: 451  
mem 444: 1001  
mem 445: 64  
mem 446: 1  
mem 447: 64  
mem 448: 1106  
mem 449: 0  
mem 450: 453  
mem 451: 4  
mem 452: 437  
mem 453: 1002  
mem 454: 64  
mem 455: 2  
mem 456: 64  
mem 457: 109  
mem 458: 1  
mem 459: 21102  
mem 460: 45  
mem 461: 1  
mem 462: -3  
mem 463: 1008  
mem 464: 1014  
mem 465: 45  
mem 466: 63  
mem 467: 1005  
mem 468: 63  
mem 469: 479  
mem 470: 4  
mem 471: 459  
mem 472: 1001  
mem 473: 64  
mem 474: 1  
mem 475: 64  
mem 476: 1105  
mem 477: 1  
mem 478: 479  
mem 479: 1002  
mem 480: 64  
mem 481: 2  
mem 482: 64  
mem 483: 109  
mem 484: 7  
mem 485: 2105  
mem 486: 1  
mem 487: 0  
mem 488: 4  
mem 489: 485  
mem 490: 1106  
mem 491: 0  
mem 492: 497  
mem 493: 1001  
mem 494: 64  
mem 495: 1  
mem 496: 64  
mem 497: 1002  
mem 498: 64  
mem 499: 2  
mem 500: 64  
mem 501: 109  
mem 502: 5  
mem 503: 1206  
mem 504: -8  
mem 505: 513  
mem 506: 1001  
mem 507: 64  
mem 508: 1  
mem 509: 64  
mem 510: 1106  
mem 511: 0  
mem 512: 515  
mem 513: 4  
mem 514: 503  
mem 515: 1002  
mem 516: 64  
mem 517: 2  
mem 518: 64  
mem 519: 109  
mem 520: -33  
mem 521: 2101  
mem 522: 0  
mem 523: 7  
mem 524: 63  
mem 525: 1008  
mem 526: 63  
mem 527: 32  
mem 528: 63  
mem 529: 1005  
mem 530: 63  
mem 531: 535  
mem 532: 1106  
mem 533: 0  
mem 534: 541  
mem 535: 4  
mem 536: 521  
mem 537: 1001  
mem 538: 64  
mem 539: 1  
mem 540: 64  
mem 541: 1002  
mem 542: 64  
mem 543: 2  
mem 544: 64  
mem 545: 109  
mem 546: 23  
mem 547: 2106  
mem 548: 0  
mem 549: 8  
mem 550: 1001  
mem 551: 64  
mem 552: 1  
mem 553: 64  
mem 554: 1106  
mem 555: 0  
mem 556: 559  
mem 557: 4  
mem 558: 547  
mem 559: 1002  
mem 560: 64  
mem 561: 2  
mem 562: 64  
mem 563: 109  
mem 564: -1  
mem 565: 21101  
mem 566: 46  
mem 567: 0  
mem 568: -5  
mem 569: 1008  
mem 570: 1013  
mem 571: 46  
mem 572: 63  
mem 573: 1005  
mem 574: 63  
mem 575: 585  
mem 576: 4  
mem 577: 565  
mem 578: 1001  
mem 579: 64  
mem 580: 1  
mem 581: 64  
mem 582: 1105  
mem 583: 1  
mem 584: 585  
mem 585: 1002  
mem 586: 64  
mem 587: 2  
mem 588: 64  
mem 589: 109  
mem 590: -4  
mem 591: 21101  
mem 592: 47  
mem 593: 0  
mem 594: 2  
mem 595: 1008  
mem 596: 1016  
mem 597: 44  
mem 598: 63  
mem 599: 1005  
mem 600: 63  
mem 601: 605  
mem 602: 1105  
mem 603: 1  
mem 604: 611  
mem 605: 4  
mem 606: 591  
mem 607: 1001  
mem 608: 64  
mem 609: 1  
mem 610: 64  
mem 611: 1002  
mem 612: 64  
mem 613: 2  
mem 614: 64  
mem 615: 109  
mem 616: -18  
mem 617: 1207  
mem 618: 4  
mem 619: 38  
mem 620: 63  
mem 621: 1005  
mem 622: 63  
mem 623: 627  
mem 624: 1106  
mem 625: 0  
mem 626: 633  
mem 627: 4  
mem 628: 617  
mem 629: 1001  
mem 630: 64  
mem 631: 1  
mem 632: 64  
mem 633: 1002  
mem 634: 64  
mem 635: 2  
mem 636: 64  
mem 637: 109  
mem 638: 5  
mem 639: 2107  
mem 640: 22  
mem 641: 7  
mem 642: 63  
mem 643: 1005  
mem 644: 63  
mem 645: 649  
mem 646: 1106  
mem 647: 0  
mem 648: 655  
mem 649: 4  
mem 650: 639  
mem 651: 1001  
mem 652: 64  
mem 653: 1  
mem 654: 64  
mem 655: 1002  
mem 656: 64  
mem 657: 2  
mem 658: 64  
mem 659: 109  
mem 660: 12  
mem 661: 2105  
mem 662: 1  
mem 663: 10  
mem 664: 1001  
mem 665: 64  
mem 666: 1  
mem 667: 64  
mem 668: 1106  
mem 669: 0  
mem 670: 673  
mem 671: 4  
mem 672: 661  
mem 673: 1002  
mem 674: 64  
mem 675: 2  
mem 676: 64  
mem 677: 109  
mem 678: -10  
mem 679: 1208  
mem 680: 6  
mem 681: 33  
mem 682: 63  
mem 683: 1005  
mem 684: 63  
mem 685: 693  
mem 686: 1001  
mem 687: 64  
mem 688: 1  
mem 689: 64  
mem 690: 1106  
mem 691: 0  
mem 692: 695  
mem 693: 4  
mem 694: 679  
mem 695: 1002  
mem 696: 64  
mem 697: 2  
mem 698: 64  
mem 699: 109  
mem 700: -7  
mem 701: 2108  
mem 702: 35  
mem 703: 7  
mem 704: 63  
mem 705: 1005  
mem 706: 63  
mem 707: 715  
mem 708: 1001  
mem 709: 64  
mem 710: 1  
mem 711: 64  
mem 712: 1106  
mem 713: 0  
mem 714: 717  
mem 715: 4  
mem 716: 701  
mem 717: 1002  
mem 718: 64  
mem 719: 2  
mem 720: 64  
mem 721: 109  
mem 722: 6  
mem 723: 1208  
mem 724: 5  
mem 725: 37  
mem 726: 63  
mem 727: 1005  
mem 728: 63  
mem 729: 735  
mem 730: 4  
mem 731: 723  
mem 732: 1106  
mem 733: 0  
mem 734: 739  
mem 735: 1001  
mem 736: 64  
mem 737: 1  
mem 738: 64  
mem 739: 1002  
mem 740: 64  
mem 741: 2  
mem 742: 64  
mem 743: 109  
mem 744: -4  
mem 745: 1202  
mem 746: 5  
mem 747: 1  
mem 748: 63  
mem 749: 1008  
mem 750: 63  
mem 751: 34  
mem 752: 63  
mem 753: 1005  
mem 754: 63  
mem 755: 765  
mem 756: 4  
mem 757: 745  
mem 758: 1001  
mem 759: 64  
mem 760: 1  
mem 761: 64  
mem 762: 1105  
mem 763: 1  
mem 764: 765  
mem 765: 1002  
mem 766: 64  
mem 767: 2  
mem 768: 64  
mem 769: 109  
mem 770: 29  
mem 771: 1206  
mem 772: -7  
mem 773: 783  
mem 774: 4  
mem 775: 771  
mem 776: 1001  
mem 777: 64  
mem 778: 1  
mem 779: 64  
mem 780: 1105  
mem 781: 1  
mem 782: 783  
mem 783: 1002  
mem 784: 64  
mem 785: 2  
mem 786: 64  
mem 787: 109  
mem 788: -28  
mem 789: 1201  
mem 790: 6  
mem 791: 0  
mem 792: 63  
mem 793: 1008  
mem 794: 63  
mem 795: 29  
mem 796: 63  
mem 797: 1005  
mem 798: 63  
mem 799: 809  
mem 800: 4  
mem 801: 789  
mem 802: 1001  
mem 803: 64  
mem 804: 1  
mem 805: 64  
mem 806: 1106  
mem 807: 0  
mem 808: 809  
mem 809: 1002  
mem 810: 64  
mem 811: 2  
mem 812: 64  
mem 813: 109  
mem 814: 5  
mem 815: 1202  
mem 816: 2  
mem 817: 1  
mem 818: 63  
mem 819: 1008  
mem 820: 63  
mem 821: 20  
mem 822: 63  
mem 823: 1005  
mem 824: 63  
mem 825: 829  
mem 826: 1106  
mem 827: 0  
mem 828: 835  
mem 829: 4  
mem 830: 815  
mem 831: 1001  
mem 832: 64  
mem 833: 1  
mem 834: 64  
mem 835: 1002  
mem 836: 64  
mem 837: 2  
mem 838: 64  
mem 839: 109  
mem 840: -1  
mem 841: 1201  
mem 842: 6  
mem 843: 0  
mem 844: 63  
mem 845: 1008  
mem 846: 63  
mem 847: 35  
mem 848: 63  
mem 849: 1005  
mem 850: 63  
mem 851: 859  
mem 852: 1001  
mem 853: 64  
mem 854: 1  
mem 855: 64  
mem 856: 1105  
mem 857: 1  
mem 858: 861  
mem 859: 4  
mem 860: 841  
mem 861: 1002  
mem 862: 64  
mem 863: 2  
mem 864: 64  
mem 865: 109  
mem 866: 2  
mem 867: 1207  
mem 868: -3  
mem 869: 25  
mem 870: 63  
mem 871: 1005  
mem 872: 63  
mem 873: 879  
mem 874: 4  
mem 875: 867  
mem 876: 1105  
mem 877: 1  
mem 878: 883  
mem 879: 1001  
mem 880: 64  
mem 881: 1  
mem 882: 64  
mem 883: 1002  
mem 884: 64  
mem 885: 2  
mem 886: 64  
mem 887: 109  
mem 888: 13  
mem 889: 1205  
mem 890: 3  
mem 891: 901  
mem 892: 4  
mem 893: 889  
mem 894: 1001  
mem 895: 64  
mem 896: 1  
mem 897: 64  
mem 898: 1106  
mem 899: 0  
mem 900: 901  
mem 901: 4  
mem 902: 64  
mem 903: 99  
mem 904: 21101  
mem 905: 0  
mem 906: 27  
mem 907: 1  
mem 908: 21101  
mem 909: 915  
mem 910: 0  
mem 911: 0  
mem 912: 1106  
mem 913: 0  
mem 914: 922  
mem 915: 21201  
mem 916: 1  
mem 917: 22987  
mem 918: 1  
mem 919: 204  
mem 920: 1  
mem 921: 99  
mem 922: 109  
mem 923: 3  
mem 924: 1207  
mem 925: -2  
mem 926: 3  
mem 927: 63  
mem 928: 1005  
mem 929: 63  
mem 930: 964  
mem 931: 21201  
mem 932: -2  
mem 933: -1  
mem 934: 1  
mem 935: 21101  
mem 936: 0  
mem 937: 942  
mem 938: 0  
mem 939: 1106  
mem 940: 0  
mem 941: 922  
mem 942: 22101  
mem 943: 0  
mem 944: 1  
mem 945: -1  
mem 946: 21201  
mem 947: -2  
mem 948: -3  
mem 949: 1  
mem 950: 21101  
mem 951: 0  
mem 952: 957  
mem 953: 0  
mem 954: 1106  
mem 955: 0  
mem 956: 922  
mem 957: 22201  
mem 958: 1  
mem 959: -1  
mem 960: -2  
mem 961: 1105  
mem 962: 1  
mem 963: 968  
mem 964: 21202  
mem 965: -2  
mem 966: 1  
mem 967: -2  
mem 968: 109  
mem 969: -3  
mem 970: 2105  
mem 971: 1  
mem 972: 0  
0 ---------------------------------------------
readMemoryLocation 0	{}
parsed 1102	{"opcode":2,"paramModes":[1,1,0]}
paramModes	{"0":1,"1":1,"2":0}
readMemoryLocation 1	{}
readMemoryLocation 2	{}
params	{}
readMemoryLocation 3	{}
output param for opcode 2 (param #2), mode=0 ==> resolves to position 63
param #0: (34463338) -- immediate --> 34463338
param #1: (34463338) -- immediate --> 34463338
instruction	{"opcode":2,"instructionLength":4,"params":[null,null],"paramModes":[1,1,0],"paramValues":[null,null],"result":{}}
4 ---------------------------------------------
readMemoryLocation 4	{}
parsed 1007	{"opcode":7,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 5	{}
readMemoryLocation 6	{}
params	{}
readMemoryLocation 7	{}
output param for opcode 7 (param #2), mode=0 ==> resolves to position 63
readMemoryLocation 63	{}
param #0: (63) -- memory[63] --> 1187721666102244
param #1: (34463338) -- immediate --> 34463338
instruction	{"opcode":7,"instructionLength":4,"params":[null,null],"paramModes":[0,1,0],"paramValues":[null,null],"result":{"opResult":0}}
8 ---------------------------------------------
readMemoryLocation 8	{}
parsed 1005	{"opcode":5,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 9	{}
readMemoryLocation 10	{}
params	{}
output param for opcode 5 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 63	{"value":0}
param #0: (63) -- memory[63] --> 0
param #1: (53) -- immediate --> 53
instruction	{"opcode":5,"instructionLength":3,"params":[null,null],"paramModes":[0,1,0],"paramValues":[0,null],"outputPosition":null,"result":{}}
11 ---------------------------------------------
readMemoryLocation 11	{}
parsed 1101	{"opcode":1,"paramModes":[1,1,0]}
paramModes	{"0":1,"1":1,"2":0}
readMemoryLocation 12	{}
readMemoryLocation 13	{}
params	{}
readMemoryLocation 14	{}
output param for opcode 1 (param #2), mode=0 ==> resolves to position 1000
param #0: (3) -- immediate --> 3
param #1: (0) -- immediate --> 0
add
instruction	{"opcode":1,"instructionLength":4,"params":[null,null],"paramModes":[1,1,0],"paramValues":[null,null],"result":{}}
extending memory from 972 to 1000
15 ---------------------------------------------
readMemoryLocation 15	{}
parsed 109	{"opcode":9,"paramModes":[1,0,0]}
paramModes	{"0":1,"1":0,"2":0}
readMemoryLocation 16	{}
params	{}
output param for opcode 9 (param #null), mode=undefined ==> resolves to position null
param #0: (988) -- immediate --> 988
moving relative pointer	{}
instruction	{"opcode":9,"instructionLength":2,"params":[null],"paramModes":[1,0,0],"paramValues":[null],"outputPosition":null,"result":{}}
17 ---------------------------------------------
readMemoryLocation 17	{}
parsed 209	{"opcode":9,"paramModes":[2,0,0]}
paramModes	{"0":2,"1":0,"2":0}
readMemoryLocation 18	{}
params	{}
output param for opcode 9 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 1000	{}
param #0: (12) -- relative from 988 --> 3
moving relative pointer	{}
instruction	{"opcode":9,"instructionLength":2,"params":[null],"paramModes":[2,0,0],"paramValues":[null],"outputPosition":null,"result":{}}
19 ---------------------------------------------
readMemoryLocation 19	{}
parsed 9	{"opcode":9,"paramModes":[0,0,0]}
paramModes	{"0":0,"1":0,"2":0}
readMemoryLocation 20	{}
params	{}
output param for opcode 9 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 1000	{}
param #0: (1000) -- memory[1000] --> 3
moving relative pointer	{}
instruction	{"opcode":9,"instructionLength":2,"params":[null],"paramModes":[0,0,0],"paramValues":[null],"outputPosition":null,"result":{}}
21 ---------------------------------------------
readMemoryLocation 21	{}
parsed 209	{"opcode":9,"paramModes":[2,0,0]}
paramModes	{"0":2,"1":0,"2":0}
readMemoryLocation 22	{}
params	{}
output param for opcode 9 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 1000	{}
param #0: (6) -- relative from 994 --> 3
moving relative pointer	{}
instruction	{"opcode":9,"instructionLength":2,"params":[null],"paramModes":[2,0,0],"paramValues":[null],"outputPosition":null,"result":{}}
23 ---------------------------------------------
readMemoryLocation 23	{}
parsed 209	{"opcode":9,"paramModes":[2,0,0]}
paramModes	{"0":2,"1":0,"2":0}
readMemoryLocation 24	{}
params	{}
output param for opcode 9 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 1000	{}
param #0: (3) -- relative from 997 --> 3
moving relative pointer	{}
instruction	{"opcode":9,"instructionLength":2,"params":[null],"paramModes":[2,0,0],"paramValues":[null],"outputPosition":null,"result":{}}
25 ---------------------------------------------
readMemoryLocation 25	{}
parsed 203	{"opcode":3,"paramModes":[2,0,0]}
paramModes	{"0":2,"1":0,"2":0}
readMemoryLocation 26	{}
params	{}
output param for opcode 3 (param #0), mode=2 ==> resolves to position 1000
readMemoryLocation 1000	{}
param #0: (0) -- relative from 1000 --> 3
instruction	{"opcode":3,"instructionLength":2,"params":[null],"paramModes":[2,0,0],"paramValues":[null],"result":{"opResult":1}}
27 ---------------------------------------------
readMemoryLocation 27	{}
parsed 1008	{"opcode":8,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 28	{}
readMemoryLocation 29	{}
params	{}
readMemoryLocation 30	{}
output param for opcode 8 (param #2), mode=0 ==> resolves to position 63
readMemoryLocation 1000	{"value":1}
param #0: (1000) -- memory[1000] --> 1
param #1: (1) -- immediate --> 1
instruction	{"opcode":8,"instructionLength":4,"params":[null,null],"paramModes":[0,1,0],"paramValues":[1,null],"result":{"opResult":0}}
31 ---------------------------------------------
readMemoryLocation 31	{}
parsed 1005	{"opcode":5,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 32	{}
readMemoryLocation 33	{}
params	{}
output param for opcode 5 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 63	{"value":0}
param #0: (63) -- memory[63] --> 0
param #1: (65) -- immediate --> 65
instruction	{"opcode":5,"instructionLength":3,"params":[null,null],"paramModes":[0,1,0],"paramValues":[0,null],"outputPosition":null,"result":{}}
34 ---------------------------------------------
readMemoryLocation 34	{}
parsed 1008	{"opcode":8,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 35	{}
readMemoryLocation 36	{}
params	{}
readMemoryLocation 37	{}
output param for opcode 8 (param #2), mode=0 ==> resolves to position 63
readMemoryLocation 1000	{"value":1}
param #0: (1000) -- memory[1000] --> 1
param #1: (2) -- immediate --> 2
instruction	{"opcode":8,"instructionLength":4,"params":[null,null],"paramModes":[0,1,0],"paramValues":[1,null],"result":{"opResult":0}}
38 ---------------------------------------------
readMemoryLocation 38	{}
parsed 1005	{"opcode":5,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 39	{}
readMemoryLocation 40	{}
params	{}
output param for opcode 5 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 63	{"value":0}
param #0: (63) -- memory[63] --> 0
param #1: (904) -- immediate --> 904
instruction	{"opcode":5,"instructionLength":3,"params":[null,null],"paramModes":[0,1,0],"paramValues":[0,null],"outputPosition":null,"result":{}}
41 ---------------------------------------------
readMemoryLocation 41	{}
parsed 1008	{"opcode":8,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 42	{}
readMemoryLocation 43	{}
params	{}
readMemoryLocation 44	{}
output param for opcode 8 (param #2), mode=0 ==> resolves to position 63
readMemoryLocation 1000	{"value":1}
param #0: (1000) -- memory[1000] --> 1
param #1: (0) -- immediate --> 0
instruction	{"opcode":8,"instructionLength":4,"params":[null,null],"paramModes":[0,1,0],"paramValues":[1,null],"result":{"opResult":0}}
45 ---------------------------------------------
readMemoryLocation 45	{}
parsed 1005	{"opcode":5,"paramModes":[0,1,0]}
paramModes	{"0":0,"1":1,"2":0}
readMemoryLocation 46	{}
readMemoryLocation 47	{}
params	{}
output param for opcode 5 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 63	{"value":0}
param #0: (63) -- memory[63] --> 0
param #1: (58) -- immediate --> 58
instruction	{"opcode":5,"instructionLength":3,"params":[null,null],"paramModes":[0,1,0],"paramValues":[0,null],"outputPosition":null,"result":{}}
48 ---------------------------------------------
readMemoryLocation 48	{}
parsed 4	{"opcode":4,"paramModes":[0,0,0]}
paramModes	{"0":0,"1":0,"2":0}
readMemoryLocation 49	{}
params	{}
output param for opcode 4 (param #null), mode=undefined ==> resolves to position null
readMemoryLocation 25	{}
param #0: (25) -- memory[25] --> 203
OUTPUT: 203
instruction	{"opcode":4,"instructionLength":2,"params":[null],"paramModes":[0,0,0],"paramValues":[null],"outputPosition":null,"result":{"opResult":null}}
50 ---------------------------------------------
readMemoryLocation 50	{}
parsed 104	{"opcode":4,"paramModes":[1,0,0]}
paramModes	{"0":1,"1":0,"2":0}
readMemoryLocation 51	{}
params	{}
output param for opcode 4 (param #null), mode=undefined ==> resolves to position null
param #0: (0) -- immediate --> 0
OUTPUT: 0
instruction	{"opcode":4,"instructionLength":2,"params":[null],"paramModes":[1,0,0],"paramValues":[null],"outputPosition":null,"result":{"opResult":null}}
52 ---------------------------------------------
readMemoryLocation 52	{}
parsed 99	{"opcode":99,"paramModes":[0,0,0]}
halt at position 52	{"pointer":0}
result:	{"result":{"memory":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1],"halted":true}}
